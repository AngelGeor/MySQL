2.INSERT INTO `reviews`  (`content` , `picture_url` , `published_at`, `rating`)
(SELECT LEFT(p.`description`,15), REVERSE(p.`name`),DATE ('2010-10-10'), p.`price` / 8
FROM `products` as p
WHERE  p.`id` >= 5
);

3.UPDATE `products` as p
SET p.`quantity_in_stock` = p.`quantity_in_stock` - 5
WHERE p.`quantity_in_stock` BETWEEN 60 AND 70;

4.DELETE  FROM `customers` as c
WHERE c.`id` NOT IN (SELECT `customer_id` FROM `orders`);

#5.
SELECT c.`id`, c.`name` FROM `categories` as c
ORDER BY c.`name` DESC;

#6.
SELECT `id`, `brand_id`, `name`, `quantity_in_stock` FROM `products`
WHERE `price` > 1000 AND quantity_in_stock < 30
ORDER BY quantity_in_stock, id;

7.
SELECT r.`id`, r.`content`, r.`rating`, r.`picture_url`, r.`published_at` FROM `reviews` as r
WHERE r.`content` LIKE "My%" AND char_length(r.`content`) > 61
ORDER BY r.rating DESC;

8.
SELECT CONCAT(c.`first_name`, ' ' , c.`last_name`) as full_name,
c.`address`,
 o.`order_datetime` as order_date
 FROM `customers` as c
 JOIN `orders` as o ON c.id = o.customer_id
 WHERE YEAR(o.`order_datetime`) <= 2018
 ORDER BY full_name DESC;

9.
SELECT COUNT(p.`id`) as item_count,
c.`name`,
SUM(p.`quantity_in_stock`) as total_quantity
FROM `products` as p
JOIN `categories` as c ON c.id = p.category_id
GROUP BY `name`
ORDER BY item_count DESC, total_quantity ASC
LIMIT 5;

10.
CREATE FUNCTION udf_customer_products_count(`name` VARCHAR(30)) 
RETURNS INT 
DETERMINISTIC
BEGIN
	DECLARE total_products INT;
    SET total_products := ( SELECT COUNT(c.id) FROM `customers` as c
    JOIN `orders` as o ON o.customer_id = c.id
    JOIN `orders_products` as op ON o.id = op.order_id
	WHERE c.`first_name` = `name`);
   
    RETURN total_products;
END

11.
CREATE PROCEDURE udp_reduce_price (category_name VARCHAR(50)) 
BEGIN
UPDATE `products` as p
JOIN `categories` as c
ON c.id = p.category_id
JOIN `reviews` as r ON r.`id` = p.`review_id`
SET p.`price` = p.`price` - (p.`price` * 0.3)
WHERE c.`name` = category_name AND r.`rating` < 4;
END